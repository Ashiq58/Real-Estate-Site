@model  Mvc_RealeState.NewModel.ViewModel.ViewLogin
@{
    Layout = null;
}
@if (TempData["message"] != null)
{
    if (TempData["message"].ToString() != "Error")
    {
        <div class="alert alert-success" id="msg">
            <strong>Success!</strong>@TempData["message"].ToString()
        </div>
    }
    else
    {
        <div class="alert alert-danger" id="msg">
            <strong>Failed!</strong>Something Went Wrong...
        </div>
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="bg">
        @using (Html.BeginForm("Login", "LoginAll", FormMethod.Post))
        {


            <div class="container-fluid">
                <div class="row col-md-5 col-md-offset-3" style="background-color:lightgrey; margin-top:100px;opacity:.9;">


                    <div class="form-horizontal" style="font-size:17px">
                        <h4>LoginModel</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            @Html.LabelFor(model => model.Login.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Login.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Login.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Login.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Login.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Login.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Login" class="btn btn-info" />
                                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myModal">Registration</button>
                            </div>
                        </div>

                    </div>

                </div>
            </div>


        }
    </div>
@using (Html.BeginForm("Register", "LoginAll", FormMethod.Post))
{
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Register Here</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserReg.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserReg.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserReg.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserReg.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserReg.Contact, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserReg.Contact, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserReg.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserReg.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserReg.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserReg.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.UserReg.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(x => x.UserReg.CityId, new SelectList(ViewBag.CityId, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                                    
                                    @Html.ValidationMessageFor(model => model.UserReg.CityId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>



                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-success" value="Register" />

                    </div>
                </div>

            </div>
        </div>
}
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    @Scripts.Render("~/bundles/bootstrap")
    <style>
        body, html {
            height: 100%;
            margin: 0;
            background-color: darkblue;
        }

        .bg {
            /* The image used */
            background-image: url("/images/slide111.jpg");
            /* Full height */
            height: 100%;
            /* Center and scale the image nicely */
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }
    </style>

</body>

</html>
//JS
<script type="text/javascript">
    var x =  @((TempData["message"] != null).ToString().ToLower());
    if (x != null) {
        $("#msg").fadeToggle(3000);
    };
</script>
